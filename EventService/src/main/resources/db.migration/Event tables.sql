CREATE TABLE event
(
    uuid                  UUID             NOT NULL,
    name                  VARCHAR(255),
    description           VARCHAR(255),
    creation_date         TIMESTAMP WITHOUT TIME ZONE,
    creatoruuid           UUID,
    registration_end_date TIMESTAMP WITHOUT TIME ZONE,
    start_date            TIMESTAMP WITHOUT TIME ZONE,
    end_date              TIMESTAMP WITHOUT TIME ZONE,
    capacity              INTEGER          NOT NULL,
    price                 DOUBLE PRECISION NOT NULL,
    status_id             BIGINT,
    event_category_id     BIGINT,
    profile_picture       OID,
    CONSTRAINT pk_event PRIMARY KEY (uuid)
);

ALTER TABLE event
    ADD CONSTRAINT FK_EVENT_ON_EVENTCATEGORY FOREIGN KEY (event_category_id) REFERENCES event_category (id);

ALTER TABLE event
    ADD CONSTRAINT FK_EVENT_ON_STATUS FOREIGN KEY (status_id) REFERENCES event_status (id);

CREATE TABLE event_category
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255),
    CONSTRAINT pk_eventcategory PRIMARY KEY (id)
);

CREATE TABLE event_status
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255),
    CONSTRAINT pk_eventstatus PRIMARY KEY (id)
);

CREATE TABLE agenda
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    event_id    UUID,
    location_id BIGINT,
    CONSTRAINT pk_agenda PRIMARY KEY (id)
);
CREATE TABLE location
(
    id        BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    longitude VARCHAR(255),
    latitude  VARCHAR(255),
    CONSTRAINT pk_location PRIMARY KEY (id)
);

ALTER TABLE agenda
    ADD CONSTRAINT FK_AGENDA_ON_EVENT FOREIGN KEY (event_id) REFERENCES event (uuid);

ALTER TABLE agenda
    ADD CONSTRAINT FK_AGENDA_ON_LOCATION FOREIGN KEY (location_id) REFERENCES location (id);